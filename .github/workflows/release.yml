name: Release
on:
    push:
        tags:
            - 'v*'
    workflow_dispatch:

jobs:
    release:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: 'macos-latest'
                      args: '--target aarch64-apple-darwin'
                    - platform: 'macos-latest'
                      args: '--target x86_64-apple-darwin'
                    - platform: 'ubuntu-22.04'
                      args: ''
                    - platform: 'windows-latest'
                      args: ''
        runs-on: ${{ matrix.platform }}
        env:
            TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        steps:
            - uses: actions/checkout@v4

            - name: setup node
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*

            - name: install Rust stable
              uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

            - name: install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-22.04'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

            - name: install frontend dependencies
              run: npm install

            - name: Build the app
              uses: tauri-apps/tauri-action@dev

              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

              with:
                  tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
                  releaseName: 'adConverter v__VERSION__' # tauri-action replaces \_\_VERSION\_\_ with the app version.
                  releaseBody: 'See the assets to download this version and install.'
                  releaseDraft: true
                  prerelease: false
                  args: ${{ matrix.args }}
